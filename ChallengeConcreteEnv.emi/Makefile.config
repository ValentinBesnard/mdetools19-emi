#
# Makefile configuration file for the compilation of an EMI UML model interpreter.
#
# -- EDIT TO ADAPT TO YOUR NEED -- 
#

#
# Default target.
#
TARGET = host
# TARGET = at91sam7sek
# TARGET = stm32f4discovery

#
# Default compiler (only for host target currently).
#
ifeq ($(TARGET), host)
	COMPILER = gcc
	# COMPILER = clang
endif

#
# Model devices needs.
#
DEVICES =
# DEVICES += with IT
# DEVICES += with GPIO
# DEVICES += with PWM
# DEVICES += with UART
DEVICES += with TCP

#
# Libraries needs.
#
LIBRARIES =
LIBRARIES += with math

#
# Default event pool. 
# Different dispatching semantics can be chosen:
# 	- defer (previously "ordered_list"): This semantics implicitly defers all ignored events.
#	- mixed (previously "fifo"): This semantics implicitly drops all ignored events if an event is consumed, and implicitly defers these events otherwise.
#	- drop: This semantics implicitly drops all ignored events.
#	- mixed_explicit_defer: This semantics implicitly drops all ignored events except events that are explicitly deferred if an event is consumed, and implicitly defers these events otherwise.
#	- implicit_drop_explicit_defer: This semantics implicitly drops all ignored events except events that are explicitly deferred.
#
EVENT_POOL = defer
# EVENT_POOL = mixed
# EVENT_POOL = drop
# EVENT_POOL = mixed_explicit_defer
# EVENT_POOL = implicit_drop_explicit_defer
# default event pool size = 4
EVENT_POOL += event-pool-size=8
EVENT_POOL += event-port-tagging

#
# Default guard language.
#
GUARD_LANGUAGE = C

#
# Default effect behavior.
#
EFFECT_LANGUAGE = C

#
# Default scheduling policy
#
SCHEDULING_POLICY = first_round_robin
# SCHEDULING_POLICY = first_in_order
# SCHEDULING_POLICY = first_in_reverse_order
# SCHEDULING_POLICY = non_deterministic

#
# Hypothesis of a reactive system
# (If yes, a transition of the environment can be considered as fireable only if there is no fireable transition in the system.)
#
REACTIVE_SYSTEM = no

#
# Analysis configuration.
#
ANALYSIS  = no
ANALYSIS += with diff
ANALYSIS += with checking 
# with checking: default max atom bank = 10
# ANALYSIS += max-atom-bank=3
# with checking: default max atom size = 2048 (useful for an embedded target)
# ANALYSIS += max-atom-size=1024

#
# Default connection (for analysis tools).
#
ifeq ($(TARGET), host)
	ANALYSIS += via tcp
	# with tcp: default tcp port = 12345 
	# ANALYSIS += tcp-port=12347
else
	ANALYSIS += via uart
	# ANALYSIS += via usb
endif

#
# Observers configuration.
#
OBSERVERS  = no
# OBSERVERS += with monitoring

#
# Trace diagram configuration
#
TRACE  = no
# message sequence chart trace
# TRACE += with msc msc-formalism=plantuml
# timing diagram trace (not compatible with analysis)
# TRACE += with timing diagram timing-diagram-formalism=plantuml
# allow to trace set of attributes
# TRACE += trace attributes
# output into a file (the default uses the target print debug)
# TRACE += output file 

#
# Execution loop limit (undefined or = 0 ~ unlimited)
#
ifneq ($(TARGET), host)
	LIMIT = 0
else
	LIMIT = 0
endif

#
# Translation configuration.
# Several DWARF tools may be log here.
# These tools generate file(s) that can be used by the EMI server translation feature.
#
TRANSLATION  = yes
TRANSLATION += with pahole
TRANSLATION += with objdump
TRANSLATION += with dwarfdump

#
# Debug configuration
#
DEBUG  = yes
DEBUG += info
DEBUG += native
DEBUG += code
# DEBUG += interpreter
# DEBUG += analysis
# DEBUG += trace
# DEBUG += target connection
# DEBUG += execution time

#
# Default debug tool (only for embedded target).
#
ifneq ($(TARGET), host)
	DEBUG_TOOL = openocd
	# DEBUG_TOOL = stlink
endif

#
# Default flash tool (only for embedded target).
#
ifneq ($(TARGET), host)
	FLASH_TOOL = openocd
	# FLASH_TOOL = stlink
endif

#
# Sanitizer configuration (only for host target).
#
ifeq ($(TARGET), host)
	SANITIZER  = no
	SANITIZER += undefined behavior
	SANITIZER += leak		# not compatible with memory
	SANITIZER += address	# not compatible with memory
	# SANITIZER += memory	# only available with clang, not compatible with address or leak
endif
