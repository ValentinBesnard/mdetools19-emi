<?xml version="1.0" encoding="UTF-8"?>
<uml:Model xmi:version="20110701" xmlns:xmi="http://www.omg.org/spec/XMI/20110701" xmlns:uml="http://www.eclipse.org/uml2/4.0.0/UML" xmi:id="ChallengeEnv" name="ChallengeEnv">
  <elementImport xmi:id="a1" visibility="private">
    <importedElement xmi:type="uml:PrimitiveType" href="ChallengeDAL.uml#ChallengeDAL.Integer"/>
  </elementImport>
  <elementImport xmi:id="a2" visibility="private">
    <importedElement xmi:type="uml:PrimitiveType" href="ChallengeDAL.uml#ChallengeDAL.Boolean"/>
  </elementImport>
  <elementImport xmi:id="a3" visibility="private">
    <importedElement xmi:type="uml:SignalEvent" href="ChallengeDAL.uml#ChallengeDAL.moveForward_SE"/>
  </elementImport>
  <elementImport xmi:id="a4" visibility="private">
    <importedElement xmi:type="uml:SignalEvent" href="ChallengeDAL.uml#ChallengeDAL.moveRight_SE"/>
  </elementImport>
  <elementImport xmi:id="a5" visibility="private">
    <importedElement xmi:type="uml:SignalEvent" href="ChallengeDAL.uml#ChallengeDAL.spin_SE"/>
  </elementImport>
  <elementImport xmi:id="a6" visibility="private">
    <importedElement xmi:type="uml:SignalEvent" href="ChallengeDAL.uml#ChallengeDAL.stop_SE"/>
  </elementImport>
  <elementImport xmi:id="a7" visibility="private">
    <importedElement xmi:type="uml:SignalEvent" href="ChallengeDAL.uml#ChallengeDAL.setSuction_SE"/>
  </elementImport>
  <elementImport xmi:id="a8" visibility="private">
    <importedElement xmi:type="uml:SignalEvent" href="ChallengeDAL.uml#ChallengeDAL.getSuction_SE"/>
  </elementImport>
  <elementImport xmi:id="a9" visibility="private">
    <importedElement xmi:type="uml:SignalEvent" href="ChallengeDAL.uml#ChallengeDAL.getPlayerGPS_SE"/>
  </elementImport>
  <elementImport xmi:id="a10" visibility="private">
    <importedElement xmi:type="uml:SignalEvent" href="ChallengeDAL.uml#ChallengeDAL.getBallGPS_SE"/>
  </elementImport>
  <elementImport xmi:id="a11" visibility="private">
    <importedElement xmi:type="uml:SignalEvent" href="ChallengeDAL.uml#ChallengeDAL.getCompass_SE"/>
  </elementImport>
  <elementImport xmi:id="a12" visibility="private">
    <importedElement xmi:type="uml:SignalEvent" href="ChallengeDAL.uml#ChallengeDAL.checkReferee_SE"/>
  </elementImport>
  <elementImport xmi:id="a13" visibility="private">
    <importedElement xmi:type="uml:Interface" href="ChallengeDAL.uml#ChallengeDAL.I_TrajToPlayer"/>
  </elementImport>
  <elementImport xmi:id="a14" visibility="private">
    <importedElement xmi:type="uml:Interface" href="ChallengeDAL.uml#ChallengeDAL.I_TrajToReferee"/>
  </elementImport>
  <elementImport xmi:id="a15" visibility="private">
    <importedElement xmi:type="uml:Class" href="ChallengeDAL.uml#ChallengeDAL.TrajFromPlayerUser"/>
  </elementImport>
  <elementImport xmi:id="a16" visibility="private">
    <importedElement xmi:type="uml:Class" href="ChallengeDAL.uml#ChallengeDAL.TrajFromRefereeUser"/>
  </elementImport>
  <elementImport xmi:id="a17" visibility="private">
    <importedElement xmi:type="uml:Class" href="ChallengeDAL.uml#ChallengeDAL.PlayerUser"/>
  </elementImport>
  <elementImport xmi:id="a18" visibility="private">
    <importedElement xmi:type="uml:Class" href="ChallengeDAL.uml#ChallengeDAL.RefereeUser"/>
  </elementImport>
  <elementImport xmi:id="a19" visibility="private">
    <importedElement xmi:type="uml:Class" href="ChallengeDAL.uml#ChallengeDAL.ControllerFromRefereeUser"/>
  </elementImport>
  <packagedElement xmi:type="uml:Class" xmi:id="ChallengeEnv.Environment" name="Environment">
    <ownedAttribute xmi:id="ChallengeEnv.Environment.player" name="player" type="ChallengeEnv.CommunicationPlayer" isUnique="false" aggregation="composite">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="a20" value="1"/>
      <upperValue xmi:type="uml:LiteralInteger" xmi:id="a21" value="1"/>
      <defaultValue xmi:type="uml:InstanceValue" xmi:id="a22" instance="ChallengeEnv.instCommunicationPlayer"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="ChallengeEnv.Environment.referee" name="referee" type="ChallengeEnv.CommunicationReferee" isUnique="false" aggregation="composite">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="a23" value="1"/>
      <upperValue xmi:type="uml:LiteralInteger" xmi:id="a24" value="1"/>
      <defaultValue xmi:type="uml:InstanceValue" xmi:id="a25" instance="ChallengeEnv.instCommunicationReferee"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Port" xmi:id="ChallengeEnv.Environment.controllerToPlayerPortEnv" name="controllerToPlayerPortEnv" type="ChallengeEnv.ControllerToPlayerPortEnv" isUnique="false" aggregation="composite">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="a26" value="1"/>
      <upperValue xmi:type="uml:LiteralInteger" xmi:id="a27" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Port" xmi:id="ChallengeEnv.Environment.controllerToRefereePortEnv" name="controllerToRefereePortEnv" type="ChallengeEnv.ControllerToRefereePortEnv" isUnique="false" aggregation="composite">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="a28" value="1"/>
      <upperValue xmi:type="uml:LiteralInteger" xmi:id="a29" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Port" xmi:id="ChallengeEnv.Environment.trajToPlayerPortEnv" name="trajToPlayerPortEnv" type="ChallengeEnv.TrajToPlayerPortEnv" isUnique="false" aggregation="composite">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="a30" value="1"/>
      <upperValue xmi:type="uml:LiteralInteger" xmi:id="a31" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Port" xmi:id="ChallengeEnv.Environment.trajToRefereePortEnv" name="trajToRefereePortEnv" type="ChallengeEnv.TrajToRefereePortEnv" isUnique="false" aggregation="composite">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="a32" value="1"/>
      <upperValue xmi:type="uml:LiteralInteger" xmi:id="a33" value="1"/>
    </ownedAttribute>
    <ownedConnector xmi:id="ChallengeEnv.Environment.c1" name="c1" type="ChallengeEnv.CommunicationPlayer_ControllerToPlayerPortEnv">
      <end xmi:id="a34" role="ChallengeEnv.Environment.player"/>
      <end xmi:id="a35" role="ChallengeEnv.Environment.controllerToPlayerPortEnv"/>
    </ownedConnector>
    <ownedConnector xmi:id="ChallengeEnv.Environment.c2" name="c2" type="ChallengeEnv.CommunicationReferee_ControllerToRefereePortEnv">
      <end xmi:id="a36" role="ChallengeEnv.Environment.referee"/>
      <end xmi:id="a37" role="ChallengeEnv.Environment.controllerToRefereePortEnv"/>
    </ownedConnector>
    <ownedConnector xmi:id="ChallengeEnv.Environment.c3" name="c3" type="ChallengeEnv.CommunicationPlayer_TrajToPlayerPortEnv">
      <end xmi:id="a38" role="ChallengeEnv.Environment.player"/>
      <end xmi:id="a39" role="ChallengeEnv.Environment.trajToPlayerPortEnv"/>
    </ownedConnector>
    <ownedConnector xmi:id="ChallengeEnv.Environment.c4" name="c4" type="ChallengeEnv.CommunicationReferee_TrajToRefereePortEnv">
      <end xmi:id="a40" role="ChallengeEnv.Environment.referee"/>
      <end xmi:id="a41" role="ChallengeEnv.Environment.trajToRefereePortEnv"/>
    </ownedConnector>
  </packagedElement>
  <packagedElement xmi:type="uml:InstanceSpecification" xmi:id="ChallengeEnv.instCommunicationPlayer" name="instCommunicationPlayer" classifier="ChallengeEnv.CommunicationPlayer">
    <slot xmi:id="a42" definingFeature="ChallengeEnv.CommunicationPlayer.tcpPort">
      <value xmi:type="uml:LiteralInteger" xmi:id="a43" value="9003"/>
    </slot>
  </packagedElement>
  <packagedElement xmi:type="uml:InstanceSpecification" xmi:id="ChallengeEnv.instCommunicationReferee" name="instCommunicationReferee" classifier="ChallengeEnv.CommunicationReferee">
    <slot xmi:id="a44" definingFeature="ChallengeEnv.CommunicationReferee.tcpPort">
      <value xmi:type="uml:LiteralInteger" xmi:id="a45" value="9007"/>
    </slot>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="ChallengeEnv.CommunicationPlayer_ControllerToPlayerPortEnv" name="CommunicationPlayer_ControllerToPlayerPortEnv" memberEnd="ChallengeEnv.CommunicationPlayer_ControllerToPlayerPortEnv.player ChallengeEnv.CommunicationPlayer_ControllerToPlayerPortEnv.controller">
    <ownedEnd xmi:id="ChallengeEnv.CommunicationPlayer_ControllerToPlayerPortEnv.player" name="player" type="ChallengeEnv.CommunicationPlayer" isUnique="false" association="ChallengeEnv.CommunicationPlayer_ControllerToPlayerPortEnv">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="a46" value="1"/>
      <upperValue xmi:type="uml:LiteralInteger" xmi:id="a47" value="1"/>
    </ownedEnd>
    <ownedEnd xmi:id="ChallengeEnv.CommunicationPlayer_ControllerToPlayerPortEnv.controller" name="controller" type="ChallengeEnv.ControllerToPlayerPortEnv" isUnique="false" association="ChallengeEnv.CommunicationPlayer_ControllerToPlayerPortEnv">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="a48" value="1"/>
      <upperValue xmi:type="uml:LiteralInteger" xmi:id="a49" value="1"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="ChallengeEnv.CommunicationReferee_ControllerToRefereePortEnv" name="CommunicationReferee_ControllerToRefereePortEnv" memberEnd="ChallengeEnv.CommunicationReferee_ControllerToRefereePortEnv.referee ChallengeEnv.CommunicationReferee_ControllerToRefereePortEnv.controller">
    <ownedEnd xmi:id="ChallengeEnv.CommunicationReferee_ControllerToRefereePortEnv.referee" name="referee" type="ChallengeEnv.CommunicationReferee" isUnique="false" association="ChallengeEnv.CommunicationReferee_ControllerToRefereePortEnv">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="a50" value="1"/>
      <upperValue xmi:type="uml:LiteralInteger" xmi:id="a51" value="1"/>
    </ownedEnd>
    <ownedEnd xmi:id="ChallengeEnv.CommunicationReferee_ControllerToRefereePortEnv.controller" name="controller" type="ChallengeEnv.ControllerToRefereePortEnv" isUnique="false" association="ChallengeEnv.CommunicationReferee_ControllerToRefereePortEnv">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="a52" value="1"/>
      <upperValue xmi:type="uml:LiteralInteger" xmi:id="a53" value="1"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="ChallengeEnv.CommunicationPlayer_TrajToPlayerPortEnv" name="CommunicationPlayer_TrajToPlayerPortEnv" memberEnd="ChallengeEnv.CommunicationPlayer_TrajToPlayerPortEnv.player ChallengeEnv.CommunicationPlayer_TrajToPlayerPortEnv.trajectoryManager">
    <ownedEnd xmi:id="ChallengeEnv.CommunicationPlayer_TrajToPlayerPortEnv.player" name="player" type="ChallengeEnv.CommunicationPlayer" isUnique="false" association="ChallengeEnv.CommunicationPlayer_TrajToPlayerPortEnv">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="a54" value="1"/>
      <upperValue xmi:type="uml:LiteralInteger" xmi:id="a55" value="1"/>
    </ownedEnd>
    <ownedEnd xmi:id="ChallengeEnv.CommunicationPlayer_TrajToPlayerPortEnv.trajectoryManager" name="trajectoryManager" type="ChallengeEnv.TrajToPlayerPortEnv" isUnique="false" association="ChallengeEnv.CommunicationPlayer_TrajToPlayerPortEnv">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="a56" value="1"/>
      <upperValue xmi:type="uml:LiteralInteger" xmi:id="a57" value="1"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="ChallengeEnv.CommunicationReferee_TrajToRefereePortEnv" name="CommunicationReferee_TrajToRefereePortEnv" memberEnd="ChallengeEnv.CommunicationReferee_TrajToRefereePortEnv.referee ChallengeEnv.CommunicationReferee_TrajToRefereePortEnv.trajectoryManager">
    <ownedEnd xmi:id="ChallengeEnv.CommunicationReferee_TrajToRefereePortEnv.referee" name="referee" type="ChallengeEnv.CommunicationReferee" isUnique="false" association="ChallengeEnv.CommunicationReferee_TrajToRefereePortEnv">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="a58" value="1"/>
      <upperValue xmi:type="uml:LiteralInteger" xmi:id="a59" value="1"/>
    </ownedEnd>
    <ownedEnd xmi:id="ChallengeEnv.CommunicationReferee_TrajToRefereePortEnv.trajectoryManager" name="trajectoryManager" type="ChallengeEnv.TrajToRefereePortEnv" isUnique="false" association="ChallengeEnv.CommunicationReferee_TrajToRefereePortEnv">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="a60" value="1"/>
      <upperValue xmi:type="uml:LiteralInteger" xmi:id="a61" value="1"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="ChallengeEnv.ControllerToPlayerPortEnv" clientDependency="a63" name="ControllerToPlayerPortEnv">
    <generalization xmi:id="a62">
      <general xmi:type="uml:Class" href="ChallengeDAL.uml#ChallengeDAL.TrajFromPlayerUser"/>
    </generalization>
    <interfaceRealization xmi:id="a63" client="ChallengeEnv.ControllerToPlayerPortEnv">
      <supplier xmi:type="uml:Interface" href="ChallengeDAL.uml#ChallengeDAL.I_TrajToPlayer"/>
      <contract href="ChallengeDAL.uml#ChallengeDAL.I_TrajToPlayer"/>
    </interfaceRealization>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="ChallengeEnv.ControllerToRefereePortEnv" name="ControllerToRefereePortEnv">
    <generalization xmi:id="a64">
      <general xmi:type="uml:Class" href="ChallengeDAL.uml#ChallengeDAL.ControllerFromRefereeUser"/>
    </generalization>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="ChallengeEnv.TrajToPlayerPortEnv" clientDependency="a66" name="TrajToPlayerPortEnv">
    <generalization xmi:id="a65">
      <general xmi:type="uml:Class" href="ChallengeDAL.uml#ChallengeDAL.TrajFromPlayerUser"/>
    </generalization>
    <interfaceRealization xmi:id="a66" client="ChallengeEnv.TrajToPlayerPortEnv">
      <supplier xmi:type="uml:Interface" href="ChallengeDAL.uml#ChallengeDAL.I_TrajToPlayer"/>
      <contract href="ChallengeDAL.uml#ChallengeDAL.I_TrajToPlayer"/>
    </interfaceRealization>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="ChallengeEnv.TrajToRefereePortEnv" clientDependency="a68" name="TrajToRefereePortEnv">
    <generalization xmi:id="a67">
      <general xmi:type="uml:Class" href="ChallengeDAL.uml#ChallengeDAL.TrajFromRefereeUser"/>
    </generalization>
    <interfaceRealization xmi:id="a68" client="ChallengeEnv.TrajToRefereePortEnv">
      <supplier xmi:type="uml:Interface" href="ChallengeDAL.uml#ChallengeDAL.I_TrajToReferee"/>
      <contract href="ChallengeDAL.uml#ChallengeDAL.I_TrajToReferee"/>
    </interfaceRealization>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="ChallengeEnv.CommunicationPlayer" clientDependency="a74" name="CommunicationPlayer" classifierBehavior="ChallengeEnv.CommunicationPlayer.SM" isActive="true">
    <generalization xmi:id="a69">
      <general xmi:type="uml:Class" href="ChallengeDAL.uml#ChallengeDAL.PlayerUser"/>
    </generalization>
    <ownedAttribute xmi:id="ChallengeEnv.CommunicationPlayer.tcpPort" name="tcpPort" visibility="private" isUnique="false">
      <type xmi:type="uml:PrimitiveType" href="ChallengeDAL.uml#ChallengeDAL.Integer"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="a70" value="1"/>
      <upperValue xmi:type="uml:LiteralInteger" xmi:id="a71" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="ChallengeEnv.CommunicationPlayer.connected" name="connected" visibility="private" isUnique="false">
      <type xmi:type="uml:PrimitiveType" href="ChallengeDAL.uml#ChallengeDAL.Integer"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="a72" value="1"/>
      <upperValue xmi:type="uml:LiteralInteger" xmi:id="a73" value="1"/>
    </ownedAttribute>
    <interfaceRealization xmi:id="a74" client="ChallengeEnv.CommunicationPlayer">
      <supplier xmi:type="uml:Interface" href="ChallengeDAL.uml#ChallengeDAL.I_TrajToPlayer"/>
      <contract href="ChallengeDAL.uml#ChallengeDAL.I_TrajToPlayer"/>
    </interfaceRealization>
    <ownedBehavior xmi:type="uml:StateMachine" xmi:id="ChallengeEnv.CommunicationPlayer.SM" name="SM">
      <region xmi:id="ChallengeEnv.CommunicationPlayer.SM.R" name="R">
        <transition xmi:id="a75" source="ChallengeEnv.CommunicationPlayer.SM.R.Initial" target="ChallengeEnv.CommunicationPlayer.SM.R.Connected">
          <effect xmi:type="uml:OpaqueBehavior" xmi:id="a76">
            <language>C</language>
            <body>SET(this, connected, TRUE); SEND(GET(this, trajectoryManager), playerConnected);</body>
          </effect>
        </transition>
        <transition xmi:id="ChallengeEnv.CommunicationPlayer.SM.R.MoveForward" name="MoveForward" source="ChallengeEnv.CommunicationPlayer.SM.R.Connected" target="ChallengeEnv.CommunicationPlayer.SM.R.Connected">
          <trigger xmi:id="a77">
            <event xmi:type="uml:SignalEvent" href="ChallengeDAL.uml#ChallengeDAL.moveForward_SE"/>
          </trigger>
        </transition>
        <transition xmi:id="ChallengeEnv.CommunicationPlayer.SM.R.MoveRight" name="MoveRight" source="ChallengeEnv.CommunicationPlayer.SM.R.Connected" target="ChallengeEnv.CommunicationPlayer.SM.R.Connected">
          <trigger xmi:id="a78">
            <event xmi:type="uml:SignalEvent" href="ChallengeDAL.uml#ChallengeDAL.moveRight_SE"/>
          </trigger>
        </transition>
        <transition xmi:id="ChallengeEnv.CommunicationPlayer.SM.R.Spin" name="Spin" source="ChallengeEnv.CommunicationPlayer.SM.R.Connected" target="ChallengeEnv.CommunicationPlayer.SM.R.Connected">
          <trigger xmi:id="a79">
            <event xmi:type="uml:SignalEvent" href="ChallengeDAL.uml#ChallengeDAL.spin_SE"/>
          </trigger>
        </transition>
        <transition xmi:id="ChallengeEnv.CommunicationPlayer.SM.R.Stop" name="Stop" source="ChallengeEnv.CommunicationPlayer.SM.R.Connected" target="ChallengeEnv.CommunicationPlayer.SM.R.Connected">
          <trigger xmi:id="a80">
            <event xmi:type="uml:SignalEvent" href="ChallengeDAL.uml#ChallengeDAL.stop_SE"/>
          </trigger>
        </transition>
        <transition xmi:id="ChallengeEnv.CommunicationPlayer.SM.R.SetSuction" name="SetSuction" source="ChallengeEnv.CommunicationPlayer.SM.R.Connected" target="ChallengeEnv.CommunicationPlayer.SM.R.Connected">
          <trigger xmi:id="a81">
            <event xmi:type="uml:SignalEvent" href="ChallengeDAL.uml#ChallengeDAL.setSuction_SE"/>
          </trigger>
        </transition>
        <transition xmi:id="ChallengeEnv.CommunicationPlayer.SM.R.GetSuction" name="GetSuction" source="ChallengeEnv.CommunicationPlayer.SM.R.Connected" target="ChallengeEnv.CommunicationPlayer.SM.R.Connected">
          <effect xmi:type="uml:OpaqueBehavior" xmi:id="a82">
            <language>C</language>
            <body>SEND(GET(this, trajectoryManager), rspSuction, 0);</body>
          </effect>
          <trigger xmi:id="a83">
            <event xmi:type="uml:SignalEvent" href="ChallengeDAL.uml#ChallengeDAL.getSuction_SE"/>
          </trigger>
        </transition>
        <transition xmi:id="ChallengeEnv.CommunicationPlayer.SM.R.GetPlayerGPSBallPos" name="GetPlayerGPSBallPos" source="ChallengeEnv.CommunicationPlayer.SM.R.Connected" target="ChallengeEnv.CommunicationPlayer.SM.R.Connected">
          <effect xmi:type="uml:OpaqueBehavior" xmi:id="a84">
            <language>C</language>
            <body>SEND(GET(this, trajectoryManager), rspPlayerGPS, -20, 0);</body>
          </effect>
          <trigger xmi:id="a85">
            <event xmi:type="uml:SignalEvent" href="ChallengeDAL.uml#ChallengeDAL.getPlayerGPS_SE"/>
          </trigger>
        </transition>
        <transition xmi:id="ChallengeEnv.CommunicationPlayer.SM.R.GetPlayerGPSRandomPos" name="GetPlayerGPSRandomPos" source="ChallengeEnv.CommunicationPlayer.SM.R.Connected" target="ChallengeEnv.CommunicationPlayer.SM.R.Connected">
          <effect xmi:type="uml:OpaqueBehavior" xmi:id="a86">
            <language>C</language>
            <body>SEND(GET(this, trajectoryManager), rspPlayerGPS, 10, 20);</body>
          </effect>
          <trigger xmi:id="a87">
            <event xmi:type="uml:SignalEvent" href="ChallengeDAL.uml#ChallengeDAL.getPlayerGPS_SE"/>
          </trigger>
        </transition>
        <transition xmi:id="ChallengeEnv.CommunicationPlayer.SM.R.GetBallGPS" name="GetBallGPS" source="ChallengeEnv.CommunicationPlayer.SM.R.Connected" target="ChallengeEnv.CommunicationPlayer.SM.R.Connected">
          <effect xmi:type="uml:OpaqueBehavior" xmi:id="a88">
            <language>C</language>
            <body>SEND(GET(this, trajectoryManager), rspBallGPS, 0, 0);</body>
          </effect>
          <trigger xmi:id="a89">
            <event xmi:type="uml:SignalEvent" href="ChallengeDAL.uml#ChallengeDAL.getBallGPS_SE"/>
          </trigger>
        </transition>
        <transition xmi:id="ChallengeEnv.CommunicationPlayer.SM.R.GetCompassShootDir" name="GetCompassShootDir" source="ChallengeEnv.CommunicationPlayer.SM.R.Connected" target="ChallengeEnv.CommunicationPlayer.SM.R.Connected">
          <effect xmi:type="uml:OpaqueBehavior" xmi:id="a90">
            <language>C</language>
            <body>SEND(GET(this, trajectoryManager), rspCompass, 180);</body>
          </effect>
          <trigger xmi:id="a91">
            <event xmi:type="uml:SignalEvent" href="ChallengeDAL.uml#ChallengeDAL.getCompass_SE"/>
          </trigger>
        </transition>
        <transition xmi:id="ChallengeEnv.CommunicationPlayer.SM.R.GetCompasRandomDir" name="GetCompasRandomDir" source="ChallengeEnv.CommunicationPlayer.SM.R.Connected" target="ChallengeEnv.CommunicationPlayer.SM.R.Connected">
          <effect xmi:type="uml:OpaqueBehavior" xmi:id="a92">
            <language>C</language>
            <body>SEND(GET(this, trajectoryManager), rspCompass, 90);</body>
          </effect>
          <trigger xmi:id="a93">
            <event xmi:type="uml:SignalEvent" href="ChallengeDAL.uml#ChallengeDAL.getCompass_SE"/>
          </trigger>
        </transition>
        <subvertex xmi:type="uml:Pseudostate" xmi:id="ChallengeEnv.CommunicationPlayer.SM.R.Initial" name="Initial"/>
        <subvertex xmi:type="uml:State" xmi:id="ChallengeEnv.CommunicationPlayer.SM.R.Connected" name="Connected"/>
      </region>
    </ownedBehavior>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="ChallengeEnv.CommunicationReferee" clientDependency="a99" name="CommunicationReferee" classifierBehavior="ChallengeEnv.CommunicationReferee.SM" isActive="true">
    <generalization xmi:id="a94">
      <general xmi:type="uml:Class" href="ChallengeDAL.uml#ChallengeDAL.RefereeUser"/>
    </generalization>
    <ownedAttribute xmi:id="ChallengeEnv.CommunicationReferee.tcpPort" name="tcpPort" visibility="private" isUnique="false">
      <type xmi:type="uml:PrimitiveType" href="ChallengeDAL.uml#ChallengeDAL.Integer"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="a95" value="1"/>
      <upperValue xmi:type="uml:LiteralInteger" xmi:id="a96" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="ChallengeEnv.CommunicationReferee.connected" name="connected" visibility="private" isUnique="false">
      <type xmi:type="uml:PrimitiveType" href="ChallengeDAL.uml#ChallengeDAL.Integer"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="a97" value="1"/>
      <upperValue xmi:type="uml:LiteralInteger" xmi:id="a98" value="1"/>
    </ownedAttribute>
    <interfaceRealization xmi:id="a99" client="ChallengeEnv.CommunicationReferee">
      <supplier xmi:type="uml:Interface" href="ChallengeDAL.uml#ChallengeDAL.I_TrajToReferee"/>
      <contract href="ChallengeDAL.uml#ChallengeDAL.I_TrajToReferee"/>
    </interfaceRealization>
    <ownedBehavior xmi:type="uml:StateMachine" xmi:id="ChallengeEnv.CommunicationReferee.SM" name="SM">
      <region xmi:id="ChallengeEnv.CommunicationReferee.SM.R" name="R">
        <transition xmi:id="a100" source="ChallengeEnv.CommunicationReferee.SM.R.Initial" target="ChallengeEnv.CommunicationReferee.SM.R.Connected">
          <effect xmi:type="uml:OpaqueBehavior" xmi:id="a101">
            <language>C</language>
            <body>SET(this, connected, TRUE); SEND(GET(this, trajectoryManager), refereeConnected);</body>
          </effect>
        </transition>
        <transition xmi:id="ChallengeEnv.CommunicationReferee.SM.R.Nothing" name="Nothing" source="ChallengeEnv.CommunicationReferee.SM.R.Connected" target="ChallengeEnv.CommunicationReferee.SM.R.AckJoin">
          <trigger xmi:id="a102">
            <event xmi:type="uml:SignalEvent" href="ChallengeDAL.uml#ChallengeDAL.checkReferee_SE"/>
          </trigger>
        </transition>
        <transition xmi:id="ChallengeEnv.CommunicationReferee.SM.R.SendPossesion" name="SendPossesion" source="ChallengeEnv.CommunicationReferee.SM.R.Connected" target="ChallengeEnv.CommunicationReferee.SM.R.AckJoin">
          <effect xmi:type="uml:OpaqueBehavior" xmi:id="a103">
            <language>C</language>
            <body>SEND(GET(this, trajectoryManager), possession);</body>
          </effect>
          <trigger xmi:id="a104">
            <event xmi:type="uml:SignalEvent" href="ChallengeDAL.uml#ChallengeDAL.checkReferee_SE"/>
          </trigger>
        </transition>
        <transition xmi:id="ChallengeEnv.CommunicationReferee.SM.R.SendDone" name="SendDone" source="ChallengeEnv.CommunicationReferee.SM.R.Connected" target="ChallengeEnv.CommunicationReferee.SM.R.AckJoin">
          <effect xmi:type="uml:OpaqueBehavior" xmi:id="a105">
            <language>C</language>
            <body>SEND(GET(this, trajectoryManager), abort); SEND(GET(this, controller), done);</body>
          </effect>
          <trigger xmi:id="a106">
            <event xmi:type="uml:SignalEvent" href="ChallengeDAL.uml#ChallengeDAL.checkReferee_SE"/>
          </trigger>
        </transition>
        <transition xmi:id="ChallengeEnv.CommunicationReferee.SM.R.SendTimeout" name="SendTimeout" source="ChallengeEnv.CommunicationReferee.SM.R.Connected" target="ChallengeEnv.CommunicationReferee.SM.R.AckJoin">
          <effect xmi:type="uml:OpaqueBehavior" xmi:id="a107">
            <language>C</language>
            <body>SEND(GET(this, trajectoryManager), abort); SEND(GET(this, controller), timeout);</body>
          </effect>
          <trigger xmi:id="a108">
            <event xmi:type="uml:SignalEvent" href="ChallengeDAL.uml#ChallengeDAL.checkReferee_SE"/>
          </trigger>
        </transition>
        <transition xmi:id="ChallengeEnv.CommunicationReferee.SM.R.SendOpponentScored" name="SendOpponentScored" source="ChallengeEnv.CommunicationReferee.SM.R.Connected" target="ChallengeEnv.CommunicationReferee.SM.R.AckJoin">
          <effect xmi:type="uml:OpaqueBehavior" xmi:id="a109">
            <language>C</language>
            <body>SEND(GET(this, trajectoryManager), abort); SEND(GET(this, controller), opponentScored);</body>
          </effect>
          <trigger xmi:id="a110">
            <event xmi:type="uml:SignalEvent" href="ChallengeDAL.uml#ChallengeDAL.checkReferee_SE"/>
          </trigger>
        </transition>
        <transition xmi:id="ChallengeEnv.CommunicationReferee.SM.R.SendAck" name="SendAck" source="ChallengeEnv.CommunicationReferee.SM.R.AckJoin" target="ChallengeEnv.CommunicationReferee.SM.R.Connected">
          <effect xmi:type="uml:OpaqueBehavior" xmi:id="a111">
            <language>C</language>
            <body>SEND(GET(this, trajectoryManager), refereeAck);</body>
          </effect>
        </transition>
        <subvertex xmi:type="uml:Pseudostate" xmi:id="ChallengeEnv.CommunicationReferee.SM.R.Initial" name="Initial"/>
        <subvertex xmi:type="uml:Pseudostate" xmi:id="ChallengeEnv.CommunicationReferee.SM.R.AckJoin" name="AckJoin" kind="join"/>
        <subvertex xmi:type="uml:State" xmi:id="ChallengeEnv.CommunicationReferee.SM.R.Connected" name="Connected"/>
      </region>
    </ownedBehavior>
  </packagedElement>
</uml:Model>
