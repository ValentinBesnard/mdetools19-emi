#ifndef METAMODEL_UML_METAMODEL_H
#define METAMODEL_UML_METAMODEL_H
/**
 * @file metamodel.h
 *
 * Define UML concepts of the metamodel.
 *
 * This file is automatically generated by the uml-serializer-c tool.
 * Do not modify manually.
 *
 * @author Matthias Brun (matthias.brun@eseo.fr)
 * @author Valentin Besnard (valentin.besnard@eseo.fr)
 */

#include "utilities/types.h"
#include "types_calibration.h"
#include "metamodel/c_uml.h"

/**
 * Definition of types needed to handle multiple inheritance.
 */
typedef enum DescriptorType DescriptorType;
typedef enum DescriptorIndex DescriptorIndex;

/**
 * Definition of the enum DescriptorType.
 * A descriptor type is generated for each class.
 */
enum DescriptorType {
	DESC_TYPE_UML_Property,
	DESC_TYPE_UML_Class,
	DESC_TYPE_UML_Port,
	DESC_TYPE_UML_Constraint,
	DESC_TYPE_UML_ConnectorEnd,
	DESC_TYPE_UML_SignalEvent,
	DESC_TYPE_UML_Connector,
	DESC_TYPE_UML_InterfaceRealization,
	DESC_TYPE_UML_OpaqueExpression,
	DESC_TYPE_UML_Interface,
	DESC_TYPE_UML_Reception,
	DESC_TYPE_UML_Pseudostate,
	DESC_TYPE_UML_Vertex,
	DESC_TYPE_UML_Association,
	DESC_TYPE_UML_ValueSpecification,
	DESC_TYPE_UML_Transition,
	DESC_TYPE_UML_StructuredClassifier,
	DESC_TYPE_UML_TypedElement,
	DESC_TYPE_UML_PrimitiveType,
	DESC_TYPE_UML_StateMachine,
	DESC_TYPE_UML_BehavioralFeature,
	DESC_TYPE_UML_MultiplicityElement,
	DESC_TYPE_UML_Behavior,
	DESC_TYPE_UML_OpaqueBehavior,
	DESC_TYPE_UML_State,
	DESC_TYPE_UML_Trigger,
	DESC_TYPE_UML_NamedElement,
	DESC_TYPE_UML_Signal,
	DESC_TYPE_UML_EncapsulatedClassifier,
	DESC_TYPE_UML_Region,
	DESC_TYPE_UML_Enumeration,
	DESC_TYPE_UML_EnumerationLiteral,
	DESC_TYPE_UML_Operation,
	DESC_TYPE_UML_BehavioredClassifier,
	DESC_TYPE_UML_ConnectableElement,
	NB_DESC_TYPE
};

/**
 * Definition of the enum DescriptorIndex.
 * A descriptor index is generated for all attributes of classes that have multiple inheritance.
 * All DESC_INDEX after NB_DESC_INDEX are unused for multiple inheritance access but useful for compilation
 * because the access is compute at runtime.
 */
enum DescriptorIndex {
	DESC_INDEX_visibility,
	DESC_INDEX_name,
	DESC_INDEX_type,
	DESC_INDEX_lower,
	DESC_INDEX_association,
	DESC_INDEX_aggregation,
	DESC_INDEX_class,
	DESC_INDEX_ownedConnector,
	DESC_INDEX_ownedAttribute,
	DESC_INDEX_classifierBehavior,
	DESC_INDEX_interfaceRealization,
	DESC_INDEX_ownedPort,
	DESC_INDEX_c_kind,
	DESC_INDEX_superClass,
	DESC_INDEX_isActive,
	DESC_INDEX_ownedReception,
	DESC_INDEX_end,
	DESC_INDEX_c_index,
	DESC_INDEX_isConjugated,
	DESC_INDEX_provided,
	DESC_INDEX_isBehavior,
	DESC_INDEX_required,
	NB_DESC_INDEX,
	DESC_INDEX_specification,
	DESC_INDEX_role,
	DESC_INDEX_partWithPort,
	DESC_INDEX_signal,
	DESC_INDEX_contract,
	DESC_INDEX_c_function,
	DESC_INDEX_language,
	DESC_INDEX_body,
	DESC_INDEX_incoming,
	DESC_INDEX_outgoing,
	DESC_INDEX_kind,
	DESC_INDEX_memberEnd,
	DESC_INDEX_ownedEnd,
	DESC_INDEX_guard,
	DESC_INDEX_effect,
	DESC_INDEX_trigger,
	DESC_INDEX_source,
	DESC_INDEX_target,
	DESC_INDEX_region,
	DESC_INDEX_method,
	DESC_INDEX_entry,
	DESC_INDEX_exit,
	DESC_INDEX_deferrableTrigger,
	DESC_INDEX_port,
	DESC_INDEX_event,
	DESC_INDEX_subvertex,
	DESC_INDEX_transition,
	DESC_INDEX_ownedLiteral
};

/**
 * The number of classes that have multiple inheritance.
 */
#define NB_MI_CLASSES	(3)

/**
 * The global offsets table for all classes that have multiple inheritance.
 */
extern uint8_t * offsets_table[NB_MI_CLASSES];

/**
 * The C macro used to access elements of the UML model per address (var must be a pointer).
 * This macro provides:
 * - a direct access in case of single inheritance
 * - an access through the descriptor table (vtable) in case of multiple inheritance.
 */
#define GETP(var, field) (((var)->c_type < NB_MI_CLASSES) ? \
		(*(__typeof__(&((var)->field))) ((void*)((var)) + offsets_table[(var)->c_type][DESC_INDEX_##field])) : ((var)->field))
		
/**
 * The C macro used to access elements of the UML model per value (var must be a value).
 * This macro provides:
 * - a direct access in case of single inheritance
 * - an access through the descriptor table (vtable) in case of multiple inheritance.
 */
#define GETV(var, field) (((var).c_type < NB_MI_CLASSES) ? \
		(*(__typeof__(&((var).field))) ((void*)(&(var)) + offsets_table[(var).c_type][DESC_INDEX_##field])) : ((var).field))

/**
 * All typedef of UML types.
 */
typedef struct C_UML_Model C_UML_Model;
typedef enum UML_VisibilityKind UML_VisibilityKind;
typedef enum UML_PseudostateKind UML_PseudostateKind;
typedef enum UML_AggregationKind UML_AggregationKind;
typedef struct UML_Constraint UML_Constraint;
typedef struct UML_ConnectorEnd UML_ConnectorEnd;
typedef struct UML_SignalEvent UML_SignalEvent;
typedef struct UML_Connector UML_Connector;
typedef struct UML_InterfaceRealization UML_InterfaceRealization;
typedef struct UML_OpaqueExpression UML_OpaqueExpression;
typedef struct UML_Interface UML_Interface;
typedef struct UML_Reception UML_Reception;
typedef struct UML_Pseudostate UML_Pseudostate;
typedef struct UML_Vertex UML_Vertex;
typedef struct UML_Association UML_Association;
typedef struct UML_ValueSpecification UML_ValueSpecification;
typedef struct UML_Property UML_Property;
typedef struct UML_Transition UML_Transition;
typedef struct UML_StructuredClassifier UML_StructuredClassifier;
typedef struct UML_TypedElement UML_TypedElement;
typedef struct UML_PrimitiveType UML_PrimitiveType;
typedef struct UML_StateMachine UML_StateMachine;
typedef struct UML_BehavioralFeature UML_BehavioralFeature;
typedef struct UML_MultiplicityElement UML_MultiplicityElement;
typedef struct UML_Behavior UML_Behavior;
typedef struct UML_OpaqueBehavior UML_OpaqueBehavior;
typedef struct UML_State UML_State;
typedef struct UML_Trigger UML_Trigger;
typedef struct UML_NamedElement UML_NamedElement;
typedef struct UML_Signal UML_Signal;
typedef struct UML_Class UML_Class;
typedef struct UML_EncapsulatedClassifier UML_EncapsulatedClassifier;
typedef struct UML_Region UML_Region;
typedef struct UML_Enumeration UML_Enumeration;
typedef struct UML_Port UML_Port;
typedef struct UML_EnumerationLiteral UML_EnumerationLiteral;
typedef struct UML_Operation UML_Operation;
typedef struct UML_BehavioredClassifier UML_BehavioredClassifier;
typedef struct UML_ConnectableElement UML_ConnectableElement;

/**
 * Attributes defined for the class UML_Constraint
 * This definition contains only own attributes of the class and not inherited attributes.
 */
#define ABSTRACT_UML_Constraint \
	UML_ValueSpecification * specification;
/**
 * Attributes defined for the class UML_ConnectorEnd
 * This definition contains only own attributes of the class and not inherited attributes.
 */
#define ABSTRACT_UML_ConnectorEnd \
	UML_Property * role; \
	UML_Property * partWithPort;
/**
 * Attributes defined for the class UML_SignalEvent
 * This definition contains only own attributes of the class and not inherited attributes.
 */
#define ABSTRACT_UML_SignalEvent \
	NbEnumerationLiteral_t c_index; \
	UML_Signal * signal;
/**
 * Attributes defined for the class UML_Connector
 * This definition contains only own attributes of the class and not inherited attributes.
 */
#define ABSTRACT_UML_Connector \
	UML_ConnectorEnd * end; \
	UML_Association * type;
/**
 * Attributes defined for the class UML_InterfaceRealization
 * This definition contains only own attributes of the class and not inherited attributes.
 */
#define ABSTRACT_UML_InterfaceRealization \
	UML_Interface * contract;
/**
 * Attributes defined for the class UML_OpaqueExpression
 * This definition contains only own attributes of the class and not inherited attributes.
 */
#define ABSTRACT_UML_OpaqueExpression \
	void * c_function; \
	char ** language; \
	char ** body;
/**
 * Attributes defined for the class UML_Interface
 * This definition contains only own attributes of the class and not inherited attributes.
 */
#define ABSTRACT_UML_Interface \
	C_UML_ClassifierKind c_kind; \
	UML_Property ** ownedAttribute; \
	UML_Reception ** ownedReception;
/**
 * Attributes defined for the class UML_Reception
 * This definition contains only own attributes of the class and not inherited attributes.
 */
#define ABSTRACT_UML_Reception \
	UML_Signal * signal;
/**
 * Attributes defined for the class UML_Pseudostate
 * This definition contains only own attributes of the class and not inherited attributes.
 */
#define ABSTRACT_UML_Pseudostate \
	UML_PseudostateKind kind;
/**
 * Attributes defined for the class UML_Vertex
 * This definition contains only own attributes of the class and not inherited attributes.
 */
#define ABSTRACT_UML_Vertex \
	C_UML_VertexKind c_kind; \
	UML_Transition ** incoming; \
	UML_Transition ** outgoing;
/**
 * Attributes defined for the class UML_Association
 * This definition contains only own attributes of the class and not inherited attributes.
 */
#define ABSTRACT_UML_Association \
	C_UML_ClassifierKind c_kind; \
	UML_Property ** memberEnd; \
	UML_Property ** ownedEnd;
/**
 * Attributes defined for the class UML_ValueSpecification
 * This definition contains only own attributes of the class and not inherited attributes.
 */
#define ABSTRACT_UML_ValueSpecification 
/**
 * Attributes defined for the class UML_Property
 * This definition contains only own attributes of the class and not inherited attributes.
 */
#define ABSTRACT_UML_Property \
	UML_Association * association; \
	UML_AggregationKind aggregation; \
	UML_Class * class;
/**
 * Attributes defined for the class UML_Transition
 * This definition contains only own attributes of the class and not inherited attributes.
 */
#define ABSTRACT_UML_Transition \
	UML_Constraint * guard; \
	UML_Behavior * effect; \
	UML_Trigger * trigger; \
	UML_Vertex * source; \
	UML_Vertex * target;
/**
 * Attributes defined for the class UML_StructuredClassifier
 * This definition contains only own attributes of the class and not inherited attributes.
 */
#define ABSTRACT_UML_StructuredClassifier \
	UML_Connector ** ownedConnector; \
	UML_Property ** ownedAttribute;
/**
 * Attributes defined for the class UML_TypedElement
 * This definition contains only own attributes of the class and not inherited attributes.
 */
#define ABSTRACT_UML_TypedElement \
	UML_Class * type;
/**
 * Attributes defined for the class UML_PrimitiveType
 * This definition contains only own attributes of the class and not inherited attributes.
 */
#define ABSTRACT_UML_PrimitiveType \
	C_UML_ClassifierKind c_kind;
/**
 * Attributes defined for the class UML_StateMachine
 * This definition contains only own attributes of the class and not inherited attributes.
 */
#define ABSTRACT_UML_StateMachine \
	UML_Region ** region;
/**
 * Attributes defined for the class UML_BehavioralFeature
 * This definition contains only own attributes of the class and not inherited attributes.
 */
#define ABSTRACT_UML_BehavioralFeature \
	UML_Behavior ** method;
/**
 * Attributes defined for the class UML_MultiplicityElement
 * This definition contains only own attributes of the class and not inherited attributes.
 */
#define ABSTRACT_UML_MultiplicityElement \
	int lower;
/**
 * Attributes defined for the class UML_Behavior
 * This definition contains only own attributes of the class and not inherited attributes.
 */
#define ABSTRACT_UML_Behavior \
	C_UML_BehaviorKind c_kind;
/**
 * Attributes defined for the class UML_OpaqueBehavior
 * This definition contains only own attributes of the class and not inherited attributes.
 */
#define ABSTRACT_UML_OpaqueBehavior \
	C_UML_BehaviorKind c_kind; \
	void * c_function; \
	char ** language; \
	char ** body;
/**
 * Attributes defined for the class UML_State
 * This definition contains only own attributes of the class and not inherited attributes.
 */
#define ABSTRACT_UML_State \
	UML_Behavior * entry; \
	UML_Behavior * exit; \
	UML_Trigger * deferrableTrigger;
/**
 * Attributes defined for the class UML_Trigger
 * This definition contains only own attributes of the class and not inherited attributes.
 */
#define ABSTRACT_UML_Trigger \
	UML_Port ** port; \
	UML_SignalEvent * event;
/**
 * Attributes defined for the class UML_NamedElement
 * This definition contains only own attributes of the class and not inherited attributes.
 */
#define ABSTRACT_UML_NamedElement \
	UML_VisibilityKind visibility; \
	char * name;
/**
 * Attributes defined for the class UML_Signal
 * This definition contains only own attributes of the class and not inherited attributes.
 */
#define ABSTRACT_UML_Signal \
	UML_Property ** ownedAttribute;
/**
 * Attributes defined for the class UML_Class
 * This definition contains only own attributes of the class and not inherited attributes.
 */
#define ABSTRACT_UML_Class \
	C_UML_ClassifierKind c_kind; \
	UML_Class ** superClass; \
	bool isActive; \
	UML_Reception ** ownedReception;
/**
 * Attributes defined for the class UML_EncapsulatedClassifier
 * This definition contains only own attributes of the class and not inherited attributes.
 */
#define ABSTRACT_UML_EncapsulatedClassifier \
	UML_Port ** ownedPort;
/**
 * Attributes defined for the class UML_Region
 * This definition contains only own attributes of the class and not inherited attributes.
 */
#define ABSTRACT_UML_Region \
	UML_Vertex ** subvertex; \
	UML_Transition ** transition;
/**
 * Attributes defined for the class UML_Enumeration
 * This definition contains only own attributes of the class and not inherited attributes.
 */
#define ABSTRACT_UML_Enumeration \
	UML_EnumerationLiteral ** ownedLiteral;
/**
 * Attributes defined for the class UML_Port
 * This definition contains only own attributes of the class and not inherited attributes.
 */
#define ABSTRACT_UML_Port \
	NbEnumerationLiteral_t c_index; \
	bool isConjugated; \
	UML_Interface ** provided; \
	bool isBehavior; \
	UML_Interface ** required;
/**
 * Attributes defined for the class UML_EnumerationLiteral
 * This definition contains only own attributes of the class and not inherited attributes.
 */
#define ABSTRACT_UML_EnumerationLiteral \
	NbEnumerationLiteral_t c_index;
/**
 * Attributes defined for the class UML_Operation
 * This definition contains only own attributes of the class and not inherited attributes.
 */
#define ABSTRACT_UML_Operation 
/**
 * Attributes defined for the class UML_BehavioredClassifier
 * This definition contains only own attributes of the class and not inherited attributes.
 */
#define ABSTRACT_UML_BehavioredClassifier \
	UML_Behavior * classifierBehavior; \
	UML_InterfaceRealization ** interfaceRealization;
/**
 * Attributes defined for the class UML_ConnectableElement
 * This definition contains only own attributes of the class and not inherited attributes.
 */
#define ABSTRACT_UML_ConnectableElement \
	UML_ConnectorEnd * end;

struct C_UML_Model {
	char * name;
	UML_Signal ** uml_signal;
	UML_SignalEvent ** uml_signal_event;
	UML_Class ** uml_class; 
	UML_Association ** uml_association;
};
/**
 * Definition of the enum UML_VisibilityKind
 */
enum UML_VisibilityKind {
	UML_PUBLIC,
	UML_PRIVATE,
	UML_PROTECTED,
	UML_PACKAGE
};
/**
 * Definition of the enum UML_PseudostateKind
 */
enum UML_PseudostateKind {
	UML_INITIAL,
	UML_DEEPHISTORY,
	UML_SHALLOWHISTORY,
	UML_JOIN,
	UML_FORK,
	UML_JUNCTION,
	UML_CHOICE,
	UML_ENTRYPOINT,
	UML_EXITPOINT,
	UML_TERMINATE
};
/**
 * Definition of the enum UML_AggregationKind
 */
enum UML_AggregationKind {
	UML_NONE,
	UML_SHARED,
	UML_COMPOSITE
};
/**
 * Definition of the type UML_Constraint
 * This structure contains own attributes of the class and inherited attributes.
 */
struct UML_Constraint {
	DescriptorType c_type;
	ABSTRACT_UML_NamedElement
	ABSTRACT_UML_Constraint
};
/**
 * Definition of a variable of type UML_Constraint with default value.
 */
 #define C_UML_CONSTRAINT_NULL  {.c_type = DESC_TYPE_UML_Constraint, .visibility = 0,.name = NULL,.specification = 0 }
/**
 * Definition of the type UML_ConnectorEnd
 * This structure contains own attributes of the class and inherited attributes.
 */
struct UML_ConnectorEnd {
	DescriptorType c_type;
	ABSTRACT_UML_MultiplicityElement
	ABSTRACT_UML_ConnectorEnd
};
/**
 * Definition of a variable of type UML_ConnectorEnd with default value.
 */
 #define C_UML_CONNECTOREND_NULL  {.c_type = DESC_TYPE_UML_ConnectorEnd, .lower = 0,.role = 0,.partWithPort = 0 }
/**
 * Definition of the type UML_SignalEvent
 * This structure contains own attributes of the class and inherited attributes.
 */
struct UML_SignalEvent {
	DescriptorType c_type;
	ABSTRACT_UML_NamedElement
	ABSTRACT_UML_SignalEvent
};
/**
 * Definition of a variable of type UML_SignalEvent with default value.
 */
 #define C_UML_SIGNALEVENT_NULL  {.c_type = DESC_TYPE_UML_SignalEvent, .visibility = 0,.name = NULL,,.signal = 0 }
/**
 * Definition of the type UML_Connector
 * This structure contains own attributes of the class and inherited attributes.
 */
struct UML_Connector {
	DescriptorType c_type;
	ABSTRACT_UML_NamedElement
	ABSTRACT_UML_Connector
};
/**
 * Definition of a variable of type UML_Connector with default value.
 */
 #define C_UML_CONNECTOR_NULL  {.c_type = DESC_TYPE_UML_Connector, .visibility = 0,.name = NULL,.end = NULL,.type = 0 }
/**
 * Definition of the type UML_InterfaceRealization
 * This structure contains own attributes of the class and inherited attributes.
 */
struct UML_InterfaceRealization {
	DescriptorType c_type;
	ABSTRACT_UML_InterfaceRealization
};
/**
 * Definition of a variable of type UML_InterfaceRealization with default value.
 */
 #define C_UML_INTERFACEREALIZATION_NULL  {.c_type = DESC_TYPE_UML_InterfaceRealization, .contract = 0 }
/**
 * Definition of the type UML_OpaqueExpression
 * This structure contains own attributes of the class and inherited attributes.
 */
struct UML_OpaqueExpression {
	DescriptorType c_type;
	ABSTRACT_UML_NamedElement
	ABSTRACT_UML_OpaqueExpression
};
/**
 * Definition of a variable of type UML_OpaqueExpression with default value.
 */
 #define C_UML_OPAQUEEXPRESSION_NULL  {.c_type = DESC_TYPE_UML_OpaqueExpression, .visibility = 0,.name = NULL,.c_function = NULL,.language = NULL,.body = NULL }
/**
 * Definition of the type UML_Interface
 * This structure contains own attributes of the class and inherited attributes.
 */
struct UML_Interface {
	DescriptorType c_type;
	ABSTRACT_UML_NamedElement
	ABSTRACT_UML_Interface
};
/**
 * Definition of a variable of type UML_Interface with default value.
 */
 #define C_UML_INTERFACE_NULL  {.c_type = DESC_TYPE_UML_Interface, .visibility = 0,.name = NULL,.c_kind = C_UML_Interface,.ownedAttribute = NULL,.ownedReception = NULL }
/**
 * Definition of the type UML_Reception
 * This structure contains own attributes of the class and inherited attributes.
 */
struct UML_Reception {
	DescriptorType c_type;
	ABSTRACT_UML_NamedElement
	ABSTRACT_UML_Reception
};
/**
 * Definition of a variable of type UML_Reception with default value.
 */
 #define C_UML_RECEPTION_NULL  {.c_type = DESC_TYPE_UML_Reception, .visibility = 0,.name = NULL,.signal = 0 }
/**
 * Definition of the type UML_Pseudostate
 * This structure contains own attributes of the class and inherited attributes.
 */
struct UML_Pseudostate {
	DescriptorType c_type;
	ABSTRACT_UML_NamedElement
	ABSTRACT_UML_Vertex
	ABSTRACT_UML_Pseudostate
};
/**
 * Definition of a variable of type UML_Pseudostate with default value.
 */
 #define C_UML_PSEUDOSTATE_NULL  {.c_type = DESC_TYPE_UML_Pseudostate, .visibility = 0,.name = NULL,.c_kind = C_UML_Pseudostate,.incoming = NULL,.outgoing = NULL,.kind = 0 }
/**
 * Definition of the type UML_Vertex
 * This structure contains own attributes of the class and inherited attributes.
 */
struct UML_Vertex {
	DescriptorType c_type;
	ABSTRACT_UML_NamedElement
	ABSTRACT_UML_Vertex
};
/**
 * Definition of a variable of type UML_Vertex with default value.
 */
 #define C_UML_VERTEX_NULL  {.c_type = DESC_TYPE_UML_Vertex, .visibility = 0,.name = NULL,.c_kind = C_UML_Vertex,.incoming = NULL,.outgoing = NULL }
/**
 * Definition of the type UML_Association
 * This structure contains own attributes of the class and inherited attributes.
 */
struct UML_Association {
	DescriptorType c_type;
	ABSTRACT_UML_NamedElement
	ABSTRACT_UML_Association
};
/**
 * Definition of a variable of type UML_Association with default value.
 */
 #define C_UML_ASSOCIATION_NULL  {.c_type = DESC_TYPE_UML_Association, .visibility = 0,.name = NULL,.c_kind = C_UML_Association,.memberEnd = NULL,.ownedEnd = NULL }
/**
 * Definition of the type UML_ValueSpecification
 * This structure contains own attributes of the class and inherited attributes.
 */
struct UML_ValueSpecification {
	DescriptorType c_type;
	ABSTRACT_UML_ValueSpecification
};
/**
 * Definition of a variable of type UML_ValueSpecification with default value.
 */
 #define C_UML_VALUESPECIFICATION_NULL  {.c_type = DESC_TYPE_UML_ValueSpecification,  }
/**
 * Definition of the type UML_Property
 * This structure contains own attributes of the class and inherited attributes.
 */
struct UML_Property {
	DescriptorType c_type;
	ABSTRACT_UML_NamedElement
	ABSTRACT_UML_TypedElement
	ABSTRACT_UML_MultiplicityElement
	ABSTRACT_UML_Property
};
/**
 * Definition of a variable of type UML_Property with default value.
 */
 #define C_UML_PROPERTY_NULL  {.c_type = DESC_TYPE_UML_Property, .visibility = 0,.name = NULL,.type = 0,.lower = 0,.association = 0,.aggregation = 0,.class = 0 }
/**
 * Definition of the type UML_Transition
 * This structure contains own attributes of the class and inherited attributes.
 */
struct UML_Transition {
	DescriptorType c_type;
	ABSTRACT_UML_NamedElement
	ABSTRACT_UML_Transition
};
/**
 * Definition of a variable of type UML_Transition with default value.
 */
 #define C_UML_TRANSITION_NULL  {.c_type = DESC_TYPE_UML_Transition, .visibility = 0,.name = NULL,.guard = 0,.effect = 0,.trigger = NULL,.source = 0,.target = 0 }
/**
 * Definition of the type UML_StructuredClassifier
 * This structure contains own attributes of the class and inherited attributes.
 */
struct UML_StructuredClassifier {
	DescriptorType c_type;
	ABSTRACT_UML_StructuredClassifier
};
/**
 * Definition of a variable of type UML_StructuredClassifier with default value.
 */
 #define C_UML_STRUCTUREDCLASSIFIER_NULL  {.c_type = DESC_TYPE_UML_StructuredClassifier, .ownedConnector = NULL,.ownedAttribute = NULL }
/**
 * Definition of the type UML_TypedElement
 * This structure contains own attributes of the class and inherited attributes.
 */
struct UML_TypedElement {
	DescriptorType c_type;
	ABSTRACT_UML_TypedElement
};
/**
 * Definition of a variable of type UML_TypedElement with default value.
 */
 #define C_UML_TYPEDELEMENT_NULL  {.c_type = DESC_TYPE_UML_TypedElement, .type = 0 }
/**
 * Definition of the type UML_PrimitiveType
 * This structure contains own attributes of the class and inherited attributes.
 */
struct UML_PrimitiveType {
	DescriptorType c_type;
	ABSTRACT_UML_NamedElement
	ABSTRACT_UML_PrimitiveType
};
/**
 * Definition of a variable of type UML_PrimitiveType with default value.
 */
 #define C_UML_PRIMITIVETYPE_NULL  {.c_type = DESC_TYPE_UML_PrimitiveType, .visibility = 0,.name = NULL,.c_kind = C_UML_PrimitiveType }
/**
 * Definition of the type UML_StateMachine
 * This structure contains own attributes of the class and inherited attributes.
 */
struct UML_StateMachine {
	DescriptorType c_type;
	ABSTRACT_UML_NamedElement
	ABSTRACT_UML_StateMachine
};
/**
 * Definition of a variable of type UML_StateMachine with default value.
 */
 #define C_UML_STATEMACHINE_NULL  {.c_type = DESC_TYPE_UML_StateMachine, .visibility = 0,.name = NULL,.region = NULL }
/**
 * Definition of the type UML_BehavioralFeature
 * This structure contains own attributes of the class and inherited attributes.
 */
struct UML_BehavioralFeature {
	DescriptorType c_type;
	ABSTRACT_UML_BehavioralFeature
};
/**
 * Definition of a variable of type UML_BehavioralFeature with default value.
 */
 #define C_UML_BEHAVIORALFEATURE_NULL  {.c_type = DESC_TYPE_UML_BehavioralFeature, .method = NULL }
/**
 * Definition of the type UML_MultiplicityElement
 * This structure contains own attributes of the class and inherited attributes.
 */
struct UML_MultiplicityElement {
	DescriptorType c_type;
	ABSTRACT_UML_MultiplicityElement
};
/**
 * Definition of a variable of type UML_MultiplicityElement with default value.
 */
 #define C_UML_MULTIPLICITYELEMENT_NULL  {.c_type = DESC_TYPE_UML_MultiplicityElement, .lower = 0 }
/**
 * Definition of the type UML_Behavior
 * This structure contains own attributes of the class and inherited attributes.
 */
struct UML_Behavior {
	DescriptorType c_type;
	ABSTRACT_UML_Behavior
};
/**
 * Definition of a variable of type UML_Behavior with default value.
 */
 #define C_UML_BEHAVIOR_NULL  {.c_type = DESC_TYPE_UML_Behavior, .c_kind = C_UML_Behavior }
/**
 * Definition of the type UML_OpaqueBehavior
 * This structure contains own attributes of the class and inherited attributes.
 */
struct UML_OpaqueBehavior {
	DescriptorType c_type;
	ABSTRACT_UML_NamedElement
	ABSTRACT_UML_OpaqueBehavior
};
/**
 * Definition of a variable of type UML_OpaqueBehavior with default value.
 */
 #define C_UML_OPAQUEBEHAVIOR_NULL  {.c_type = DESC_TYPE_UML_OpaqueBehavior, .visibility = 0,.name = NULL,.c_kind = C_UML_OpaqueBehavior,.c_function = NULL,.language = NULL,.body = NULL }
/**
 * Definition of the type UML_State
 * This structure contains own attributes of the class and inherited attributes.
 */
struct UML_State {
	DescriptorType c_type;
	ABSTRACT_UML_NamedElement
	ABSTRACT_UML_Vertex
	ABSTRACT_UML_State
};
/**
 * Definition of a variable of type UML_State with default value.
 */
 #define C_UML_STATE_NULL  {.c_type = DESC_TYPE_UML_State, .visibility = 0,.name = NULL,.c_kind = C_UML_State,.incoming = NULL,.outgoing = NULL,.entry = 0,.exit = 0,.deferrableTrigger = NULL }
/**
 * Definition of the type UML_Trigger
 * This structure contains own attributes of the class and inherited attributes.
 */
struct UML_Trigger {
	DescriptorType c_type;
	ABSTRACT_UML_NamedElement
	ABSTRACT_UML_Trigger
};
/**
 * Definition of a variable of type UML_Trigger with default value.
 */
 #define C_UML_TRIGGER_NULL  {.c_type = DESC_TYPE_UML_Trigger, .visibility = 0,.name = NULL,.port = NULL,.event = 0 }
/**
 * Definition of the type UML_NamedElement
 * This structure contains own attributes of the class and inherited attributes.
 */
struct UML_NamedElement {
	DescriptorType c_type;
	ABSTRACT_UML_NamedElement
};
/**
 * Definition of a variable of type UML_NamedElement with default value.
 */
 #define C_UML_NAMEDELEMENT_NULL  {.c_type = DESC_TYPE_UML_NamedElement, .visibility = 0,.name = NULL }
/**
 * Definition of the type UML_Signal
 * This structure contains own attributes of the class and inherited attributes.
 */
struct UML_Signal {
	DescriptorType c_type;
	ABSTRACT_UML_NamedElement
	ABSTRACT_UML_Signal
};
/**
 * Definition of a variable of type UML_Signal with default value.
 */
 #define C_UML_SIGNAL_NULL  {.c_type = DESC_TYPE_UML_Signal, .visibility = 0,.name = NULL,.ownedAttribute = NULL }
/**
 * Definition of the type UML_Class
 * This structure contains own attributes of the class and inherited attributes.
 */
struct UML_Class {
	DescriptorType c_type;
	ABSTRACT_UML_NamedElement
	ABSTRACT_UML_StructuredClassifier
	ABSTRACT_UML_BehavioredClassifier
	ABSTRACT_UML_EncapsulatedClassifier
	ABSTRACT_UML_Class
};
/**
 * Definition of a variable of type UML_Class with default value.
 */
 #define C_UML_CLASS_NULL  {.c_type = DESC_TYPE_UML_Class, .visibility = 0,.name = NULL,.ownedConnector = NULL,.ownedAttribute = NULL,.classifierBehavior = 0,.interfaceRealization = NULL,.ownedPort = NULL,.c_kind = C_UML_Class,.superClass = NULL,.isActive = 0,.ownedReception = NULL }
/**
 * Definition of the type UML_EncapsulatedClassifier
 * This structure contains own attributes of the class and inherited attributes.
 */
struct UML_EncapsulatedClassifier {
	DescriptorType c_type;
	ABSTRACT_UML_EncapsulatedClassifier
};
/**
 * Definition of a variable of type UML_EncapsulatedClassifier with default value.
 */
 #define C_UML_ENCAPSULATEDCLASSIFIER_NULL  {.c_type = DESC_TYPE_UML_EncapsulatedClassifier, .ownedPort = NULL }
/**
 * Definition of the type UML_Region
 * This structure contains own attributes of the class and inherited attributes.
 */
struct UML_Region {
	DescriptorType c_type;
	ABSTRACT_UML_NamedElement
	ABSTRACT_UML_Region
};
/**
 * Definition of a variable of type UML_Region with default value.
 */
 #define C_UML_REGION_NULL  {.c_type = DESC_TYPE_UML_Region, .visibility = 0,.name = NULL,.subvertex = NULL,.transition = NULL }
/**
 * Definition of the type UML_Enumeration
 * This structure contains own attributes of the class and inherited attributes.
 */
struct UML_Enumeration {
	DescriptorType c_type;
	ABSTRACT_UML_NamedElement
	ABSTRACT_UML_Enumeration
};
/**
 * Definition of a variable of type UML_Enumeration with default value.
 */
 #define C_UML_ENUMERATION_NULL  {.c_type = DESC_TYPE_UML_Enumeration, .visibility = 0,.name = NULL,.ownedLiteral = NULL }
/**
 * Definition of the type UML_Port
 * This structure contains own attributes of the class and inherited attributes.
 */
struct UML_Port {
	DescriptorType c_type;
	ABSTRACT_UML_NamedElement
	ABSTRACT_UML_Property
	ABSTRACT_UML_TypedElement
	ABSTRACT_UML_ConnectableElement
	ABSTRACT_UML_MultiplicityElement
	ABSTRACT_UML_Port
};
/**
 * Definition of a variable of type UML_Port with default value.
 */
 #define C_UML_PORT_NULL  {.c_type = DESC_TYPE_UML_Port, .visibility = 0,.name = NULL,.association = 0,.aggregation = 0,.class = 0,.type = 0,.end = NULL,.lower = 0,,.isConjugated = 0,.provided = NULL,.isBehavior = 0,.required = NULL }
/**
 * Definition of the type UML_EnumerationLiteral
 * This structure contains own attributes of the class and inherited attributes.
 */
struct UML_EnumerationLiteral {
	DescriptorType c_type;
	ABSTRACT_UML_NamedElement
	ABSTRACT_UML_EnumerationLiteral
};
/**
 * Definition of a variable of type UML_EnumerationLiteral with default value.
 */
 #define C_UML_ENUMERATIONLITERAL_NULL  {.c_type = DESC_TYPE_UML_EnumerationLiteral, .visibility = 0,.name = NULL, }
/**
 * Definition of the type UML_Operation
 * This structure contains own attributes of the class and inherited attributes.
 */
struct UML_Operation {
	DescriptorType c_type;
	ABSTRACT_UML_NamedElement
	ABSTRACT_UML_BehavioralFeature
	ABSTRACT_UML_Operation
};
/**
 * Definition of a variable of type UML_Operation with default value.
 */
 #define C_UML_OPERATION_NULL  {.c_type = DESC_TYPE_UML_Operation, .visibility = 0,.name = NULL,.method = NULL }
/**
 * Definition of the type UML_BehavioredClassifier
 * This structure contains own attributes of the class and inherited attributes.
 */
struct UML_BehavioredClassifier {
	DescriptorType c_type;
	ABSTRACT_UML_BehavioredClassifier
};
/**
 * Definition of a variable of type UML_BehavioredClassifier with default value.
 */
 #define C_UML_BEHAVIOREDCLASSIFIER_NULL  {.c_type = DESC_TYPE_UML_BehavioredClassifier, .classifierBehavior = 0,.interfaceRealization = NULL }
/**
 * Definition of the type UML_ConnectableElement
 * This structure contains own attributes of the class and inherited attributes.
 */
struct UML_ConnectableElement {
	DescriptorType c_type;
	ABSTRACT_UML_ConnectableElement
};
/**
 * Definition of a variable of type UML_ConnectableElement with default value.
 */
 #define C_UML_CONNECTABLEELEMENT_NULL  {.c_type = DESC_TYPE_UML_ConnectableElement, .end = NULL }

#endif /* METAMODEL_UML_METAMODEL_H */
