#ifndef MODELS_IDENTIFIERS_H
#define MODELS_IDENTIFIERS_H
/**
 * @file identifiers.h
 *
 * Define identifiers for states and signal events of the UML model.
 *
 * This file is automatically generated by the uml-serializer-c tool.
 * Do not modify manually.
 *
 * @author Matthias Brun (matthias.brun@eseo.fr)
 * @author Valentin Besnard (valentin.besnard@eseo.fr)
 */

#include "types_calibration.h"
#include "interpreter/active_object.h"
#include "interpreter/passive_object.h"

// Serialize root access to composite structure classes
#define ROOT_instMain 	passiveObjects.instMain
#ifdef WITH_OBSERVERS
#define ROOT_instObs 	passiveObjects.instObs
#endif /* WITH_OBSERVERS */


#define STATE_DirectionObserver_Initial			0
#define STATE_DirectionObserver_Running			1
#define STATE_DirectionObserver_Fail			2






#define STATE_Controller_Initial			0
#define STATE_Controller_IdleJunction			1
#define STATE_Controller_WaitConnection			2
#define STATE_Controller_GoToBall			3
#define STATE_Controller_GoToGoal			4
#define STATE_Controller_Turn			5
#define STATE_Controller_Shoot			6
#define STATE_Controller_ListenReferee			7
#define STATE_Controller_End			8

#define STATE_TrajectoryManager_Initial			0
#define STATE_TrajectoryManager_SendSignalsJunction			1
#define STATE_TrajectoryManager_WaitSignalsChoice			2
#define STATE_TrajectoryManager_ComputeTraj			3
#define STATE_TrajectoryManager_TrajGoPos			4
#define STATE_TrajectoryManager_TrajGoAngle			5
#define STATE_TrajectoryManager_Idle			6
#define STATE_TrajectoryManager_WaitConnection			7
#define STATE_TrajectoryManager_WaitSignals			8







#define STATE_CommunicationPlayer_Initial			0
#define STATE_CommunicationPlayer_Connected			1

#define STATE_CommunicationReferee_Initial			0
#define STATE_CommunicationReferee_AckJoin			1
#define STATE_CommunicationReferee_Connected			2














#define STATE_observer_Initial			0
#define STATE_observer_Running			1
#define STATE_observer_Fail			2

/*
 * List of signal events id.
 */
#define SIGNAL_connected			(globalSignalEvents.connected)
#define SIGNAL_goPos			(globalSignalEvents.goPos)
#define SIGNAL_goAngle			(globalSignalEvents.goAngle)
#define SIGNAL_finish			(globalSignalEvents.finish)
#define SIGNAL_error			(globalSignalEvents.error)
#define SIGNAL_moveForward			(globalSignalEvents.moveForward)
#define SIGNAL_moveRight			(globalSignalEvents.moveRight)
#define SIGNAL_spin			(globalSignalEvents.spin)
#define SIGNAL_stop			(globalSignalEvents.stop)
#define SIGNAL_setSuction			(globalSignalEvents.setSuction)
#define SIGNAL_getSuction			(globalSignalEvents.getSuction)
#define SIGNAL_getPlayerGPS			(globalSignalEvents.getPlayerGPS)
#define SIGNAL_getBallGPS			(globalSignalEvents.getBallGPS)
#define SIGNAL_getCompass			(globalSignalEvents.getCompass)
#define SIGNAL_rspPlayerGPS			(globalSignalEvents.rspPlayerGPS)
#define SIGNAL_rspBallGPS			(globalSignalEvents.rspBallGPS)
#define SIGNAL_rspSuction			(globalSignalEvents.rspSuction)
#define SIGNAL_rspCompass			(globalSignalEvents.rspCompass)
#define SIGNAL_playerConnected			(globalSignalEvents.playerConnected)
#define SIGNAL_refereeConnected			(globalSignalEvents.refereeConnected)
#define SIGNAL_possession			(globalSignalEvents.possession)
#define SIGNAL_abort			(globalSignalEvents.abort)
#define SIGNAL_done			(globalSignalEvents.done)
#define SIGNAL_opponentScored			(globalSignalEvents.opponentScored)
#define SIGNAL_timeout			(globalSignalEvents.timeout)
#define SIGNAL_refereeAck			(globalSignalEvents.refereeAck)
#define SIGNAL_checkReferee			(globalSignalEvents.checkReferee)

/**
 * List of behavioral ports id.
 */
#define NO_PORT			(-1)

#endif /* MODELS_IDENTIFIERS_H */
